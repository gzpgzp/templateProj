
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class ElemTypePrefab : Luban.BeanBase
{
    public ElemTypePrefab(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["elemType"].IsNumber) { throw new SerializationException(); }  ElemType = (ElemTypeConfig.ElemTypeEnum)_buf["elemType"].AsInt; }
        { if(!_buf["path"].IsString) { throw new SerializationException(); }  Path = _buf["path"]; }
    }

    public static ElemTypePrefab DeserializeElemTypePrefab(JSONNode _buf)
    {
        return new ElemTypePrefab(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 名称
    /// </summary>
    public readonly ElemTypeConfig.ElemTypeEnum ElemType;
    /// <summary>
    /// 路径
    /// </summary>
    public readonly string Path;
   
    public const int __ID__ = 189310573;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "elemType:" + ElemType + ","
        + "path:" + Path + ","
        + "}";
    }
}

}
